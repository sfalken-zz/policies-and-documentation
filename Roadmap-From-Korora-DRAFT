Road Map. The Path Ahead

Road maps enable road trips, and road trips are about passengers -
or, in the case of Korora, our community. Passengers help plan
where they want to go by providing input, directions and
periodically asking, "Are we there yet?"

Without passengers or goals, a road map is a mythical, meaningless
thing - so the main goal we have in producing this road map is to
let our users, developers, and those looking for a friendly and
powerful distribution know where it is we are currently heading.

Our Development Process
The Korora Project is committed to an open development process. We
operate around an approximate six-month, time-based release cycle
which generally lags Fedora’s Life Cycle by two to four weeks.

Planning Phase
Currently our planning phase is ephemeral with major goals outlined
early in the cycle which are then iterated over until release day.
All development discussions happen in the open via Engage or on
IRC.

Goals for Stable +1
For the next release we are focusing on three main elements: User
Experience (UX) and Theming, Pharlap and Canvas.

UX and Theming
With the last release, based on strong community requests, we
provided five different flavours of desktop in order to provide
more choice. Based on constructive community feedback, additional
effort will be concentrated to optimising the KDE, Cinnamon and
MATE desktops.

Pharlap
We introduce a tech preview of our Proprietary Driver Manager
(Pharlap) which is to eventually replace Jockey. Pharlap is largely
derived from Ubuntu’s Drivers Common architecture and adapted for
the YUM/RPM world.

There are significant challenges as a result of different practices
between DPKG and RPM packaging and their associated metadata. We
plan to engage our upstream repository managers for improving this
situation.

Canvas
This feature represents something completely unique for our
distribution and one that at times feels all consuming and never
ending. It’s a number of concepts and is best considered a spectrum
of capability than a single feature in itself.

The initial feature set of Canvas will include:

Save a system’s package selection (template) online (associated
with a Korora Prime account)
Restore a system’s package selection based on its saved templates
View and modify a saved template online
Future features include but are not limited to:

create and share templates online
template inheritance - supporting modular templates
link machines (and their templates) to a Korora Prime account
receive update notifications of all your machines
push updates down to linked machines
push template changes down to linked machines
export an online template as a kickstart file
export an online template as a bootable ISO
Goals for Stable ++
For some future release we have the following desires:

Anaconda UX / UI
The Anaconda rewrite has left many users confused about
installation. The current UI complicates a number of tasks that
could be optimised. We want to explore the best way to address
these deficiencies, for example:

Patch in place the existing UI and offer upstream
Research and test any Anaconda alternatives
Replace the Anaconda UI with a custom layout
Anaconda / First Boot / Welcome / Canvas
As Canvas matures, integrating the ability to set the machine /
template to be applied at the time of installation would be ideal.
This would allow for streamlining true custom and personalised
installations.

Lightweight Desktop-Agnostic SDK
The Korora Welcome utility is an experiment at a desktop-agnostic
application that leverages HTML5/CSS/JS for the main UI components
and utilises python hooks for interacting with the system from
within a WebKit container.

The initial version was extremely hacky but this has improved with
the latest release by largely removing most of those hacks as well
as consolidating a consistent data interchange mechanism.

We would like to continue this experiment and attempt to provide a
lightweight SDK for Korora specific applications that attempt to
blend the offline and online experiences.

Software Center
There are a number of UI’s that sit on top of YUM to aid package
installation, the latest work with GNOME Software highlights a
number of new technologies that is improving the ability to search,
install and modify your OS.

We would like to explore a desktop-agnostic mechanism for
searching, installing and modifying software on your system. It
would be Canvas-aware and leverage the SDK.

Feedback Welcome!
We encourage you to share your feedback about Korora and our road
map on Google+, Facebook and Twitter and IRC. You can also submit
your bug reports, ideas and questions via Engage!