
Why openSUSE?

Reason 1: We’re not (just) a Linux Distribution

Normally, the first thing people think of when they hear openSUSE is our ‘Regular Release Distribution’, such as openSUSE 13.2 which we released last year (Download it HERE)

The openSUSE Project however produces a whole bunch more.

For starters, we have not one, but technically TWO other Linux Distributions which we release and maintain

openSUSE Tumbleweed – our amazing rolling release which manages to give it’s users stable, usable, Linux operating system, with constantly updating software.
Perfect not only for Developers, but anyone who wants the latest and greatest software, leading Linux experts like Greg Kroah-Hartman have stated rolling releases like Tumbleweed represent the ‘future’ of Linux distributions. I agree, and I think openSUSE’s is the best (for reasons that will be made clear later in this post).
In my case it’s replaced all but one of my Linux installations, which previously included non-openSUSE distributions. The last (my openSUSE 13.1 server) is likely to end up running Tumbleweed as soon as I have a weekend to move it over. I started small with Tumbleweed, having it on just one machine, but after a year, I just don’t see the need for the ‘old fashioned’ releases any more in any of my use cases.
If you want to see it for yourself, Download it HERE

openSUSE Evergreen – this is a great community driven project to extend the lifecycle of select versions of our Regular Release beyond its usual “2 Releases + 2 Months” lifespan.
While technically not a ‘true’ separate Distribution in the purest sense of the word, it takes a herculean effort from our community to keep on patching the distribution as it gets older and older, but it allows us to offer a ‘Long Duration Support’ for a significant period after the regular lifespan.
The current openSUSE Evergreen release is openSUSE 13.1, which will be supported until at least November 2016 and can be Downloaded HERE

So, we’re not just *a* Linux distribution but several, but wait, there’s more!

The openSUSE Project hosts a whole pile of other software Projects, always Open Source, which we both use ourselves and encourage others to use and contribute to. These include:

Open Build Service – our build tool, building all of our packages as well as ones for SUSE Linux Enterprise, Arch, Debian, Fedora, Scientific Linux, RHEL, CentOS, Ubuntu, and more.

openQA – automated testing for *any* operating system, that can read the screen and control the test host the same way a user does.

YaST – The best/only comprehensive Linux system configuration & installation tool.

KIWI – Create Linux images for deployment on real hardware, virtualisation, and now even container systems like Docker. Kiwi is the engine that powers SUSE Studio

Snapper – Create, manage, and revert system snapshots. Roll-back without hassle when your system gets messed up (p.s. It’s probably your fault it messed up, so Snapper can show you what changed between snapshots too)

OSEM – Open Source Event Management. Lots of Open Source projects have their own conferences and other events. We have our own tool for managing proposals, organising schedules, taking registrations, etc.

Trollolo – Command line tool for Trello with a brilliant name ;)

And many more, many of which can be found on our GitHub project page
Reason 2: We build and use the best tools

You might have noticed a common theme among many of the software projects listed above. We’re a Project that cares a lot about using the right tool for the job.
In many cases that means using many of the same tools that other projects use, IRC, Git & GitHub, Forums, Mailing Lists, etc. We’re not the kind of project that wants to invent new types of wheels just because we didn’t invent the first one, but when the tools that are out there don’t do the job well enough, we roll up our sleeves and try to produce the *best* tool for that job.

Obviously, we do this motivated by the need to scratch our own itches, but we also work very hard to produce tools which can, and should, be adopted by a much wider audience than just ‘users and contributors to the openSUSE Distributions’.
This is probably best highlighted by talking about two of our best tools, the Open Build Service, and openQA.

Open Build Service – As already mentioned, our build tool builds all of the openSUSE Distributions packages, ISOs, Images, etc.
It also generates and hosts repositories for these packages.
It has always been built as a ‘cross-distribution’ tool, currently able to build packages for SUSE Linux Enterprise, Arch, Debian, Fedora, Scientific Linux, RHEL, CentOS, Ubuntu and more.
With both a web-based UI (you can see and use our installation HERE) and the osc command-line tool (Documentation HERE) the barrier to entry is pretty low. Even someone with no packaging experience can easily see the contents of any package in OBS, understand how it’s put together, branch it (aka fork it to use the github equivalent term) into their own Project and get hacking away.
We also allow our openSUSE instance of OBS to be used by *anyone* without charge, so they can build and host their packages on our infrastructure for free (though at the very least, we’d like it very much if they made sure their openSUSE packages work really nice in return ;) )
OBS is already used by other companies and projects like VideoLAN, Dell, HipChat and ownCloud, but if you’re in the business of making software for Linux, you really need to ask yourself the question “Why don’t I use OBS to build my packages?”

openQA – Another jewel in our crown and somewhere I’ve been spending a lot of my time lately. openQA is a testing tool that lets you build tests for any operating system or application. Unlike practically every other testing tool I’ve looked at, openQA actually tests software the same way *users* do. It looks at the screen, and makes sure the user will see what you expect them to see. Then press the same keyboard and mouse buttons that a user would to work through the application. You can see it in action HERE
openSUSE use openQA extensively to build Tumbleweed. Proposed code for Tumbleweed is tested by openQA before it is accepted, and tested again AFTER it’s accepted (to make sure it integrates well with everything else that has been recently merged).
This is how we’re able to offer Tumbleweed as a ‘stable’ Rolling Release, because thanks to openQA we *know* the Distribution works *before* we put any updates in the hands of any users. If something does break, openQA stops the release, and users don’t notice any problems, besides perhaps a slight delay in receiving new updates. On the (exceptionally rare) chance that something slips by openQA, that becomes a new test case, so we never make the same mistake twice.
openQA is also being used by SUSE for the testing of SUSE Linux Enterprise, and the Fedora Project have recently started using it. We’d love to see more distributions using it, and while playing around we’ve already managed to get openQA testing different operating systems like Android and even Windows :)
Reason 3: Engineering matters

Why all this focus on tools? Well for our community, engineering matters. Beyond the tools that we use to make this happen, we spend a lot of time, braincells, and discussions, getting under the hood and trying to find the best way to build our software.

This has led to openSUSE leading the way with lots of innovations in areas like package management. zypper and libsolv mean that, unlike other RPM-based Linux distributions ‘dependency-hell’ is a thing of the past for us, and we manage to stand toe to toe with Debian and Ubuntu, look at their package managers and go ‘yeah, we can do that, and more’

We’re also not interested in being another Open Source project taking everything from dozens of upstream projects and either stamping our logo on it and calling it our own, or changing a whole bunch of stuff and not giving stuff back.
We work hard with our upstream projects, be that the Kernel, GNOME, KDE, whatever, to give our feedback, get our patches merged, not just for their benefit, but our own – the more they accept, the less work we’ll have to do maintain long winded openSUSE specific patch sets in the Future.

 
Reason 4: Community, Community, Community

The openSUSE Community is great, so great they deserve a blog post of this length on their own. But for the purposes of this post I want to summarise a few things.

First, a little bit about SUSE. We’re sponsored by SUSE, and they make up an important part of the community, employing a good number of openSUSE contributors, and regularly contributing to the openSUSE Project in terms of code, staff, money.
In many respects their the ‘Patron’ of the openSUSE Project, having our back when we need it, but not overarching overlords controlling the project. The openSUSE Project is independent, free to set it’s own direction.
SUSE sees themselves as peers in the community, taking part in the same way as everyone else, encouraging its engineers to be involved in discussions, and help set the direction of the openSUSE Project via code submissions, just like everyone else.
Open Source works best when there is freedom to innovate, that’s the business openSUSE is in, and SUSE is a company that understands at it’s Core – as their current recruitment campaign says “Open Source is in their Genes”  (P.S. They’re Hiring)

So if SUSE aren’t ‘in charge’, who is? Well, the community is. Those who do, decide, and we want more people to help join us doing stuff! We’re the kind of project that is very open to new contributors, and we try hard to maintain a very low barrier to entry.
We’re not the sort of project with lots of hoops you need to jump through before you’re allowed to do anything.
If you see something that needs fixing, talk to the people also working on it, fix it for/with them, and submit your contributions. This is true for code, the website, wiki, marketing stuff, anything, anywhere. We’re not a project where you need permission before you can get involved.
We try and keep our processes lean but the ones we do have are on our Wiki, and in terms of getting together with existing contributors, they can most easily be found in our IRC Channels and on our Mailing Lists

If you’re a user and need help actually using openSUSE but aren’t ready to get involved with contributing to the project yet, then we have a great community of contributors helping support people via IRC and our Forums

But doesn’t everyone doing everything everywhere lead to chaos? No, not really. The Open Source model works, with the few processes we have in place providing enough structure and safety that problems get caught and dealt with as part of a natural flow and learning process.
But, it’s not utopia, from time to time of course stuff pops up, and that’s why the openSUSE project has the Board.
Our job is to help keep this Project on the right track, keep people talking to each other, resolving conflicts, keeping everyone on the same page, and being the ‘decision makers of last resort’ if there is no one else able/suitable to make a decision that affects the Project.

This basically boils down to being the ‘Universal Escalation Point’ – If you have a problem, if no one else can help, and if you can find them (and that should be easy), maybe you should contact board@opensuse.org
(LINK – ahh, nostalgia)

The structure of the Board is also a nice reflection of how the rest of our community is structured – of the 5 elected Board seats, no more than 2 can be occupied by people employed/controlled by the same organisation. This means no company (not even SUSE) can have a majority of the seats on the Board, ensuring it’s healthy and balanced just like the rest of our community.

And finally, the openSUSE is just a great bunch of people. I’ve been contributing to this project since it started now, and it’s dragged me in and is as much fun as ever. We have great, smart, funny, dedicated people, and it’s a pleasure working with them both as part of my day job and hobby.

A big part of that is our regular openSUSE Conferences. 2011 was my first, and the wonderful combination of meeting people, great talks, and (lots of) openSUSE Beer, enabled me to jump from being a ‘casual contributor’ on the fringes to someone who really felt part of this great community.

We have another openSUSE Conference coming up in May, in Den Haag/Netherlands. There’s still time to Submit talks (we’d love to see more from other Projects) or Register. If this post has got you interested in openSUSE, come along, it’s a great opportunity to meet us :)

And remember our motto and default /etc/motd.. Have a Lot of Fun!
